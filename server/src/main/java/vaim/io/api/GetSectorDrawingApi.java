/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package vaim.io.api;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import vaim.io.api.structures.GraphChunk;
import vaim.io.api.structures.GraphChunkQuery;
import vaim.io.api.structures.GraphSector;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-11-08T16:09:00.412Z[GMT]")
@Api(value = "get_sector_drawing", description = "the get_sector_drawing API")
public interface GetSectorDrawingApi extends GeneralApi{

	@CrossOrigin(origins = ORIGIN)
    @ApiOperation(value = "Computes a drawing for the sector(s) indicated as input", nickname = "drawSector", notes = "Computes a drawing for the sector(s) indicated as input", response = GraphChunk.class, responseContainer = "List", tags={ "Action", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Sectors drawn", response = GraphChunk.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "Graph not found") })
    @RequestMapping(value = "/get_sector_drawing",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<GraphSector> drawSector(@NotNull @ApiParam(value = "The session id", required = true) @Valid @RequestParam(value = "sessionId", required = true) String sessionId
,@ApiParam(value = "the sectors in the matrix to load" ,required=true )  @Valid @RequestBody GraphChunkQuery body
);

}

